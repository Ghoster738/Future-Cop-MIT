#include "../../../Data/Mission/FontResource.h"
#include "../../../Utilities/ImageFormat/QuiteOkImage.h"
#include <iostream>
#include "../../Utilities/TestImage2D.h"
#include <set>

// Embbedded Files goes here.

const size_t playstation_qoi_len = 1449;
const uint8_t playstation_qoi[] = {
  0x71, 0x6f, 0x69, 0x66, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0d,
  0x04, 0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0xc8, 0x55, 0xc1, 0x7f, 0xc0, 0x26,
  0xc2, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc2, 0x35, 0xc0, 0x26,
  0xc3, 0x35, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc2, 0x35, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc2, 0x26, 0xc1, 0x35, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc2,
  0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc2, 0x26, 0xc1,
  0x35, 0xc0, 0x26, 0xc3, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0xc3, 0x35, 0xc0, 0x26,
  0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc2,
  0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc1,
  0x26, 0xc0, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc1,
  0x26, 0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc1,
  0x26, 0xc1, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc2, 0x26, 0x35, 0xc6, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35,
  0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0xc1, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc6, 0x26, 0x35, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0xc3, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0xc3,
  0x35, 0x26, 0xc2, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0x26, 0x35, 0xc0, 0x26, 0xc0,
  0x35, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26,
  0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35,
  0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26,
  0xc2, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0xc1, 0x35,
  0xc2, 0x26, 0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0xc0, 0x35,
  0xc0, 0x26, 0xc2, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0x26,
  0xc2, 0x35, 0xc2, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc1, 0x26,
  0xc2, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26,
  0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc8, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc4, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc2, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26,
  0x35, 0xc6, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc4, 0x26, 0x35, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc5, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0xc2, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc0, 0x26,
  0xc2, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0x26, 0x35, 0xc4, 0x26, 0xc2, 0x35,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc1, 0x26, 0xc0,
  0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc2, 0x35, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1,
  0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0xc1,
  0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26,
  0xc1, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0x26, 0xc2, 0x35,
  0xc3, 0x26, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc0,
  0x26, 0x35, 0xc4, 0x26, 0xc1, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc2, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xc6, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xfd, 0xfd,
  0xfd, 0xfd, 0xd9, 0x26, 0x35, 0xc9, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0xc0,
  0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc2, 0x26, 0xc0, 0x35, 0xc2, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xcf, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0x35,
  0xc5, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35,
  0xc5, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc1, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26,
  0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xf5, 0x26, 0x35, 0xc1, 0x26,
  0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4,
  0x26, 0x35, 0xce, 0x26, 0x35, 0xc2, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xcd, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc4, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc2, 0x26, 0x35,
  0xc2, 0x26, 0xc0, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0xc0, 0x35,
  0x26, 0xc0, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0xc0, 0x35, 0x26, 0xc0,
  0x35, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xf9, 0x26, 0xc3, 0x35, 0xc5,
  0x26, 0xc3, 0x35, 0xc6, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc4, 0x26, 0x35, 0xd9, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xce, 0x26, 0xc0,
  0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26,
  0x35, 0xc8, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0x26, 0xc3,
  0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc1, 0x26, 0xc0, 0x35,
  0xc2, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xf5, 0x26,
  0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc4, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xcf,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xd0, 0x26, 0x35, 0xc2,
  0x26, 0x35, 0xc2, 0x26, 0x35, 0xd0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0xc1, 0x35,
  0xc1, 0x26, 0xc0, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0xc0, 0x35,
  0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35,
  0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xed, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc9, 0x26, 0xc0, 0x35,
  0xc1, 0x26, 0xc0, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc2, 0x26, 0xc0, 0x35,
  0xc8, 0x26, 0x35, 0xd0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc4, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xd2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0xc3,
  0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc1, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc1, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0x35,
  0xc0, 0x26, 0xc1, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0xfd, 0xfd, 0xfd, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01
};

const size_t computer_qoi_len = 2754;
const uint8_t computer_qoi[computer_qoi_len] = {
  0x71, 0x6f, 0x69, 0x66, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x19,
  0x04, 0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0xc8, 0x55, 0xc3, 0x7f, 0xc1, 0x26,
  0xc3, 0x35, 0xc0, 0x26, 0xc4, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0xc5, 0x35, 0xc1, 0x26, 0xc2, 0x35, 0xc0, 0x26, 0xc5, 0x35,
  0xc0, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc2, 0x26, 0xc1, 0x35,
  0xcc, 0x26, 0x35, 0xd2, 0x26, 0x35, 0xca, 0x26, 0x35, 0xc3, 0x26, 0xc1,
  0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc6,
  0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc2, 0x35, 0xda, 0x26, 0xc3, 0x35, 0xc1,
  0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26,
  0x35, 0xc2, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc6, 0x26, 0x35,
  0xca, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35,
  0x26, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xca, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc5, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc6, 0x26, 0x35, 0xc9, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0x26, 0xc5, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0xca, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xd8,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0xc2, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0xc4, 0x35, 0xc0, 0x26, 0xc5, 0x35,
  0x26, 0xc4, 0x35, 0xc0, 0x26, 0xc4, 0x35, 0xc4, 0x26, 0x35, 0xc2, 0x26,
  0xc3, 0x35, 0xc1, 0x26, 0xc4, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0,
  0x26, 0xc5, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc2, 0x26, 0x35, 0xc1, 0x26, 0xc2, 0x35, 0xc2, 0x26, 0xc3, 0x35, 0xc0,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0xc0, 0x35, 0xc7,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc7, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0xc5,
  0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0xc2, 0x35,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc2, 0x26, 0x35, 0xc4, 0x26, 0xc4, 0x35, 0x26, 0xc4, 0x35, 0xc0, 0x26,
  0xc1, 0x35, 0xc3, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc9, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc7, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc9, 0x26, 0x35,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0xc1,
  0x26, 0x35, 0xca, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc2, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0xc0, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xca,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xc7, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc2, 0x26,
  0xc0, 0x35, 0xc2, 0x26, 0x35, 0xc4, 0x26, 0xc5, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26,
  0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35,
  0x26, 0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc9, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xca, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc2, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc5, 0x35, 0x26, 0xc4, 0x35, 0xc4,
  0x26, 0x35, 0xc1, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26,
  0x35, 0xc6, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc0, 0x35, 0xc5, 0x26, 0xc2,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0xc3, 0x35,
  0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0xc2, 0x35, 0x26, 0x35,
  0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc2, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc4, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xca, 0x26, 0x35, 0xc1, 0x26, 0xc2, 0x35,
  0x26, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc9, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0x26, 0x35, 0xfd, 0xfd, 0xfd,
  0xfd, 0xca, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc3,
  0x35, 0xc1, 0x26, 0xc5, 0x35, 0x26, 0xc5, 0x35, 0xc0, 0x26, 0xc3, 0x35,
  0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0xc4, 0x35,
  0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35,
  0xc0, 0x26, 0xc5, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0xc5, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0xc5, 0x35, 0x26, 0x35, 0xc4, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc2, 0x35,
  0x26, 0x35, 0xe4, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26,
  0xc0, 0x35, 0xc1, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc2, 0x26, 0x35,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc6, 0x26, 0x35,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0xca, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35,
  0xca, 0x26, 0x35, 0xd8, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc8, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0x26, 0x35, 0xc6, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc7, 0x26, 0xc0, 0x35, 0xc3,
  0x26, 0xc0, 0x35, 0xc7, 0x26, 0x35, 0xd9, 0x26, 0xc4, 0x35, 0xc0, 0x26,
  0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0xc5, 0x35, 0x26, 0xc5,
  0x35, 0x26, 0x35, 0xc1, 0x26, 0xc1, 0x35, 0x26, 0xc5, 0x35, 0x26, 0xc2,
  0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0xc4, 0x35, 0xc0, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0xc4, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc4, 0x26, 0x35,
  0xc6, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0xc7, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc5, 0x26, 0x35, 0xc4, 0x26, 0xc0, 0x35, 0xc7, 0x26, 0xc0, 0x35, 0xc4,
  0x26, 0x35, 0xc2, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc2,
  0x26, 0x35, 0xc4, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0xc4, 0x26, 0xc1, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3,
  0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc6, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xcb, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2,
  0x26, 0xc0, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc1, 0x26, 0x35, 0x26,
  0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc7, 0x26, 0x35, 0xc2, 0x26, 0x35,
  0xc4, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc1, 0x26, 0x35, 0x26, 0x35, 0xc4, 0x26, 0x35, 0xc4, 0x26,
  0x35, 0xc6, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc7, 0x26, 0x35, 0xc2, 0x26, 0xc0, 0x35, 0xc7, 0x26, 0xc0, 0x35,
  0xc2, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc5, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26,
  0x35, 0xc2, 0x26, 0xc0, 0x35, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc6, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc6, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc0, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc3, 0x26, 0xc0, 0x35, 0xc3,
  0x26, 0xc0, 0x35, 0xc3, 0x26, 0x35, 0xc4, 0x26, 0xc5, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0xc4, 0x35,
  0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc1, 0x26, 0xc5, 0x35,
  0x26, 0x35, 0xc6, 0x26, 0xc4, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0x35, 0xc6, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0xc0, 0x26, 0xc3, 0x35, 0xc3, 0x26, 0x35, 0xc5, 0x26, 0x35,
  0xc3, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0xc3, 0x26,
  0x35, 0xc2, 0x26, 0x35, 0xc2, 0x26, 0xc5, 0x35, 0xc0, 0x26, 0x35, 0xc4,
  0x26, 0xc5, 0x35, 0xc6, 0x26, 0xc1, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0xc1,
  0x26, 0xc3, 0x35, 0xc5, 0x26, 0x35, 0xc4, 0x26, 0xc0, 0x35, 0x26, 0xc0,
  0x35, 0xc4, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xfd, 0xfd, 0xfd, 0xed,
  0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26,
  0x35, 0xc1, 0x26, 0x35, 0xfd, 0xe1, 0x26, 0x35, 0x26, 0xc0, 0x35, 0x26,
  0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0xc5, 0x35, 0xc1, 0x26,
  0x35, 0xc7, 0x26, 0x35, 0xc0, 0x26, 0xc2, 0x35, 0xc1, 0x26, 0xc3, 0x35,
  0xc1, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0,
  0x26, 0x35, 0x26, 0xc2, 0x35, 0xc1, 0x26, 0xc3, 0x35, 0xc0, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0xc5, 0x35, 0x26, 0xc5, 0x35, 0x26, 0x35,
  0xc3, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc1,
  0x26, 0x35, 0xfd, 0xe4, 0x26, 0x35, 0xc0, 0x26, 0xc1, 0x35, 0xc0, 0x26,
  0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35,
  0x26, 0x35, 0x26, 0x35, 0xc9, 0x26, 0x35, 0xc9, 0x26, 0x35, 0xc2, 0x26,
  0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0xc0, 0x35, 0xc2, 0x26,
  0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35,
  0xc5, 0x26, 0x35, 0xc8, 0x26, 0x35, 0xc3, 0x26, 0x35, 0xc0, 0x26, 0xc3,
  0x35, 0xc2, 0x26, 0xc1, 0x35, 0xfd, 0xe7, 0x26, 0xc0, 0x35, 0x26, 0xc0,
  0x35, 0xc9, 0x26, 0x35, 0xcc, 0x26, 0xc3, 0x35, 0x26, 0xc3, 0x35, 0xc1,
  0x26, 0x35, 0xc4, 0x26, 0xc4, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35,
  0xc0, 0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc6, 0x26,
  0xc3, 0x35, 0xc1, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0x35, 0xc2, 0x26, 0x35, 0xc4, 0x26, 0xc1, 0x35,
  0xfd, 0xfd, 0xca, 0x26, 0xc1, 0x35, 0xdb, 0x26, 0x35, 0xc9, 0x26, 0x35,
  0xc2, 0x26, 0x35, 0x26, 0x35, 0xc5, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0x26, 0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xcb, 0x26, 0x35,
  0xc1, 0x26, 0x35, 0x26, 0x35, 0xc1, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0,
  0x26, 0x35, 0xc0, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc1, 0x26, 0x35,
  0xc4, 0x26, 0xc5, 0x35, 0xfd, 0xfd, 0x26, 0x35, 0x26, 0x35, 0x26, 0x35,
  0xda, 0x26, 0x35, 0xc7, 0x26, 0x35, 0xc0, 0x26, 0xc2, 0x35, 0xc1, 0x26,
  0xc3, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0xc0, 0x26, 0x35, 0x26,
  0x35, 0xc3, 0x26, 0x35, 0x26, 0x35, 0xc6, 0x26, 0xc3, 0x35, 0xc3, 0x26,
  0x35, 0xc3, 0x26, 0xc0, 0x35, 0x26, 0xc0, 0x35, 0xc0, 0x26, 0x35, 0xc3,
  0x26, 0x35, 0x26, 0xc5, 0x35, 0xfd, 0xfd, 0xfd, 0xfd, 0xe7, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01
};

const size_t macintosh_fnt_len = 4384;
const uint8_t macintosh_fnt[macintosh_fnt_len] = {
  0x50, 0x54, 0x4e, 0x46, 0x00, 0x00, 0x11, 0x20, 0x00, 0x64, 0x00, 0x66,
  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x90, 0x30, 0x00, 0x07, 0x08,
  0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x31, 0x00, 0x03, 0x08, 0xf8,
  0x00, 0x01, 0x00, 0x08, 0x03, 0x00, 0x32, 0x00, 0x07, 0x08, 0x08, 0x00,
  0x01, 0x00, 0x08, 0x00, 0x00, 0x33, 0x00, 0x07, 0x08, 0x10, 0x00, 0x01,
  0x00, 0x08, 0x00, 0x00, 0x34, 0x00, 0x07, 0x08, 0x18, 0x00, 0x01, 0x00,
  0x08, 0x00, 0x00, 0x35, 0x00, 0x07, 0x08, 0x20, 0x00, 0x01, 0x00, 0x08,
  0x00, 0x00, 0x36, 0x00, 0x07, 0x08, 0x28, 0x00, 0x01, 0x00, 0x08, 0x00,
  0x00, 0x37, 0x00, 0x07, 0x08, 0x30, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00,
  0x38, 0x00, 0x07, 0x08, 0x38, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x39,
  0x00, 0x07, 0x08, 0x40, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x20, 0x00,
  0x01, 0x01, 0xfe, 0x00, 0x17, 0x00, 0x08, 0x00, 0x00, 0x40, 0x00, 0x07,
  0x08, 0x48, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x23, 0x00, 0x07, 0x08,
  0x50, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x24, 0x00, 0x07, 0x08, 0x58,
  0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x25, 0x00, 0x07, 0x08, 0x60, 0x00,
  0x01, 0x00, 0x08, 0x00, 0x00, 0x26, 0x00, 0x07, 0x08, 0x68, 0x00, 0x01,
  0x00, 0x08, 0x00, 0x00, 0x2a, 0x00, 0x05, 0x05, 0x64, 0x00, 0x13, 0x00,
  0x08, 0x01, 0x01, 0x3f, 0x00, 0x07, 0x08, 0xc8, 0x00, 0x01, 0x00, 0x08,
  0x00, 0x00, 0x3b, 0x00, 0x02, 0x06, 0xb5, 0x00, 0x0b, 0x00, 0x08, 0x03,
  0x01, 0x3a, 0x00, 0x01, 0x05, 0x8f, 0x00, 0x13, 0x00, 0x08, 0x03, 0x01,
  0x2c, 0x00, 0x02, 0x02, 0x61, 0x00, 0x13, 0x00, 0x08, 0x02, 0x06, 0x2e,
  0x00, 0x01, 0x01, 0x5f, 0x00, 0x13, 0x00, 0x08, 0x03, 0x07, 0x21, 0x00,
  0x01, 0x08, 0xf2, 0x00, 0x01, 0x00, 0x08, 0x03, 0x00, 0x2d, 0x00, 0x05,
  0x01, 0x89, 0x00, 0x15, 0x00, 0x08, 0x01, 0x03, 0x5f, 0x00, 0x07, 0x01,
  0x7b, 0x00, 0x13, 0x00, 0x08, 0x00, 0x07, 0x2b, 0x00, 0x05, 0x05, 0x83,
  0x00, 0x13, 0x00, 0x08, 0x01, 0x01, 0x3d, 0x00, 0x07, 0x04, 0xe0, 0x00,
  0x13, 0x00, 0x08, 0x02, 0x02, 0x5e, 0x00, 0x03, 0x02, 0x77, 0x00, 0x13,
  0x00, 0x08, 0x02, 0x00, 0x60, 0x00, 0x03, 0x03, 0xb1, 0x00, 0x0a, 0x00,
  0x08, 0x02, 0x00, 0x7e, 0x00, 0x05, 0x03, 0x71, 0x00, 0x13, 0x00, 0x08,
  0x02, 0x00, 0x27, 0x00, 0x01, 0x02, 0x6f, 0x00, 0x13, 0x00, 0x08, 0x03,
  0x00, 0x22, 0x00, 0x03, 0x02, 0x6a, 0x00, 0x13, 0x00, 0x08, 0x02, 0x00,
  0x61, 0x00, 0x07, 0x05, 0xb0, 0x00, 0x04, 0x00, 0x08, 0x00, 0x03, 0x62,
  0x00, 0x07, 0x08, 0x70, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x63, 0x00,
  0x06, 0x05, 0x91, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x64, 0x00, 0x07,
  0x08, 0x78, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x65, 0x00, 0x07, 0x05,
  0x98, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x66, 0x00, 0x07, 0x08, 0x80,
  0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x67, 0x00, 0x07, 0x08, 0x88, 0x00,
  0x01, 0x00, 0x08, 0x00, 0x03, 0x68, 0x00, 0x07, 0x08, 0x90, 0x00, 0x01,
  0x00, 0x08, 0x00, 0x00, 0x69, 0x00, 0x01, 0x08, 0xfc, 0x00, 0x01, 0x00,
  0x08, 0x03, 0x00, 0x6a, 0x00, 0x03, 0x08, 0xf4, 0x00, 0x01, 0x00, 0x08,
  0x02, 0x01, 0x6b, 0x00, 0x07, 0x08, 0x98, 0x00, 0x01, 0x00, 0x08, 0x00,
  0x00, 0x6c, 0x00, 0x02, 0x08, 0xef, 0x00, 0x01, 0x00, 0x08, 0x03, 0x00,
  0x6d, 0x00, 0x07, 0x05, 0xa0, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x6e,
  0x00, 0x07, 0x05, 0xa8, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x6f, 0x00,
  0x07, 0x05, 0xb8, 0x00, 0x04, 0x00, 0x08, 0x00, 0x03, 0x70, 0x00, 0x07,
  0x08, 0xa0, 0x00, 0x01, 0x00, 0x08, 0x00, 0x03, 0x71, 0x00, 0x07, 0x08,
  0xa8, 0x00, 0x01, 0x00, 0x08, 0x00, 0x03, 0x72, 0x00, 0x07, 0x05, 0xb0,
  0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x73, 0x00, 0x07, 0x05, 0xb8, 0x00,
  0x13, 0x00, 0x08, 0x00, 0x03, 0x74, 0x00, 0x04, 0x08, 0xe7, 0x00, 0x01,
  0x00, 0x08, 0x02, 0x00, 0x75, 0x00, 0x07, 0x05, 0xc0, 0x00, 0x04, 0x00,
  0x08, 0x00, 0x03, 0x76, 0x00, 0x07, 0x05, 0xc0, 0x00, 0x13, 0x00, 0x08,
  0x00, 0x03, 0x77, 0x00, 0x07, 0x05, 0xc8, 0x00, 0x13, 0x00, 0x08, 0x00,
  0x03, 0x78, 0x00, 0x07, 0x05, 0xd0, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03,
  0x79, 0x00, 0x07, 0x08, 0xa1, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x03, 0x7a,
  0x00, 0x07, 0x05, 0xd8, 0x00, 0x13, 0x00, 0x08, 0x00, 0x03, 0x41, 0x00,
  0x07, 0x08, 0xe8, 0x00, 0x0d, 0x00, 0x08, 0x00, 0x00, 0x42, 0x00, 0x07,
  0x08, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x43, 0x00, 0x07, 0x08,
  0x09, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x44, 0x00, 0x07, 0x08, 0x11,
  0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x45, 0x00, 0x07, 0x08, 0x19, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0x00, 0x46, 0x00, 0x07, 0x08, 0x21, 0x00, 0x0a,
  0x00, 0x08, 0x00, 0x00, 0x47, 0x00, 0x07, 0x08, 0x29, 0x00, 0x0a, 0x00,
  0x08, 0x00, 0x00, 0x48, 0x00, 0x07, 0x08, 0x31, 0x00, 0x0a, 0x00, 0x08,
  0x00, 0x00, 0x49, 0x00, 0x03, 0x08, 0xb8, 0x00, 0x0a, 0x00, 0x08, 0x02,
  0x00, 0x4a, 0x00, 0x05, 0x08, 0xbc, 0x00, 0x0a, 0x00, 0x08, 0x01, 0x00,
  0x4b, 0x00, 0x07, 0x08, 0x39, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x4c,
  0x00, 0x05, 0x08, 0xc2, 0x00, 0x0a, 0x00, 0x08, 0x01, 0x00, 0x4d, 0x00,
  0x07, 0x08, 0x41, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x4e, 0x00, 0x07,
  0x08, 0x49, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x08,
  0xf0, 0x00, 0x0d, 0x00, 0x08, 0x00, 0x00, 0x50, 0x00, 0x07, 0x08, 0x51,
  0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x51, 0x00, 0x07, 0x08, 0x59, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0x00, 0x52, 0x00, 0x07, 0x08, 0x61, 0x00, 0x0a,
  0x00, 0x08, 0x00, 0x00, 0x53, 0x00, 0x07, 0x08, 0x69, 0x00, 0x0a, 0x00,
  0x08, 0x00, 0x00, 0x54, 0x00, 0x07, 0x08, 0x71, 0x00, 0x0a, 0x00, 0x08,
  0x00, 0x00, 0x55, 0x00, 0x07, 0x08, 0xf8, 0x00, 0x0d, 0x00, 0x08, 0x00,
  0x00, 0x56, 0x00, 0x07, 0x08, 0x79, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00,
  0x57, 0x00, 0x07, 0x08, 0x81, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x58,
  0x00, 0x07, 0x08, 0x89, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x59, 0x00,
  0x07, 0x08, 0x91, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x5a, 0x00, 0x07,
  0x08, 0x99, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x5c, 0x00, 0x07, 0x07,
  0xc8, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x00, 0x7c, 0x00, 0x01, 0x08, 0xec,
  0x00, 0x01, 0x00, 0x08, 0x03, 0x00, 0x2f, 0x00, 0x07, 0x07, 0xe0, 0x00,
  0x0b, 0x00, 0x08, 0x00, 0x00, 0x3c, 0x00, 0x07, 0x07, 0xd0, 0x00, 0x0b,
  0x00, 0x08, 0x00, 0x00, 0x3e, 0x00, 0x07, 0x07, 0xd8, 0x00, 0x0b, 0x00,
  0x08, 0x00, 0x00, 0x28, 0x00, 0x03, 0x08, 0xdf, 0x00, 0x01, 0x00, 0x08,
  0x02, 0x00, 0x29, 0x00, 0x03, 0x08, 0xe3, 0x00, 0x01, 0x00, 0x08, 0x02,
  0x00, 0x5b, 0x00, 0x02, 0x08, 0xd1, 0x00, 0x01, 0x00, 0x08, 0x02, 0x00,
  0x5d, 0x00, 0x02, 0x08, 0xd4, 0x00, 0x01, 0x00, 0x08, 0x02, 0x00, 0x7b,
  0x00, 0x03, 0x07, 0xd7, 0x00, 0x01, 0x00, 0x08, 0x01, 0x01, 0x7d, 0x00,
  0x03, 0x07, 0xdb, 0x00, 0x01, 0x00, 0x08, 0x01, 0x01, 0x7f, 0x00, 0x07,
  0x08, 0xa9, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x00, 0xc4, 0x00, 0x07, 0x0b,
  0xe8, 0x00, 0x0a, 0x00, 0x08, 0x00, 0xfd, 0xe4, 0x00, 0x07, 0x07, 0xb0,
  0x00, 0x02, 0x00, 0x08, 0x00, 0x01, 0xd6, 0x00, 0x07, 0x0b, 0xf0, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0xfd, 0xf6, 0x00, 0x07, 0x07, 0xb8, 0x00, 0x02,
  0x00, 0x08, 0x00, 0x01, 0xdc, 0x00, 0x07, 0x0b, 0xf8, 0x00, 0x0a, 0x00,
  0x08, 0x00, 0xfd, 0xfc, 0x00, 0x07, 0x07, 0xc0, 0x00, 0x02, 0x00, 0x08,
  0x00, 0x01, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad,
  0xad, 0xad, 0xad, 0xad, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x19,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0xa3, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0xff, 0xff, 0xff, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xf0, 0xff, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x0f, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x0f, 0x0f, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x0f, 0x00,
  0x0f, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x0f,
  0x00, 0xf0, 0x00, 0x00, 0xff, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0xf0, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x0f, 0x00, 0xf0,
  0xff, 0xff, 0xff, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0xf0, 0xf0, 0x0f, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f,
  0x00, 0x00, 0x0f, 0x0f, 0xff, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0xf0,
  0x0f, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0x00,
  0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x00,
  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x00,
  0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00,
  0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x00, 0x0f, 0xff, 0xf0, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xff, 0x00,
  0x0f, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00,
  0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0x00,
  0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0,
  0xff, 0xff, 0xff, 0x00, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f,
  0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0xf0, 0x00, 0xf0,
  0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0f, 0x0f, 0x00,
  0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x00,
  0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x0f, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f,
  0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0xf0, 0x00, 0xff, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0x00, 0x0f, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0xf0, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00,
  0xf0, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xf0, 0x00, 0x00,
  0x00, 0xff, 0xff, 0x00, 0x0f, 0x0f, 0x0f, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0x0f, 0xff, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xf0, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0x0f, 0xff, 0xf0, 0xf0, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0xf0, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00,
  0xf0, 0xf0, 0x0f, 0x00, 0xff, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0,
  0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff,
  0x00, 0xff, 0xff, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xf0,
  0x00, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0,
  0x0f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0xf0, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xff,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00,
  0xff, 0xf0, 0x0f, 0xff, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf0, 0x0f, 0xf0, 0x00, 0xff,
  0x0f, 0xf0, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0xf0, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0xf0,
  0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x0f, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff,
  0x0f, 0x00, 0x0f, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xf0, 0x00,
  0x0f, 0x00, 0xf0, 0x0f, 0x0f, 0x00, 0xf0, 0x0f, 0x0f, 0xff, 0xff, 0xf0,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f,
  0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00,
  0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0f,
  0x0f, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x0f, 0x0f, 0x00, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xff,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0x0f, 0x0f, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0x0f, 0x00,
  0x0f, 0x00, 0xf0, 0x0f, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
  0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0xff, 0x0f, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x0f,
  0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00,
  0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0x0f, 0xf0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0,
  0x0f, 0x00, 0x00, 0x0f, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0xff, 0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x00,
  0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x0f, 0xf0,
  0x00, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xf0,
  0xff, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0x0f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f,
  0x00, 0xf0, 0x00, 0x00, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0x00, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0x0f, 0xf0, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0xf0, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x0f, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xf0, 0x0f, 0xff, 0x00, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x0f, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xff, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0xf0, 0xff, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0x0f, 0xff, 0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0f, 0xff, 0xff, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0x00, 0x0f, 0x00,
  0xf0, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00,
  0xf0, 0x0f, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0xf0, 0x00, 0xf0, 0x0f, 0x00, 0xf0,
  0x0f, 0xf0, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0xf0, 0x0f, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x0f, 0xf0, 0xff, 0x00, 0xf0, 0x00, 0x00, 0xf0,
  0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

Data::Mission::FontResource* getMacintosh( std::ostream *stream, int output_level ) {
    Data::Mission::FontResource* macintosh_font_p = new Data::Mission::FontResource;

    macintosh_font_p->setIndexNumber( 0 );
    macintosh_font_p->setMisIndexNumber( 0 );
    macintosh_font_p->setResourceID( 2 );

    auto loading = Utilities::Buffer::Reader( macintosh_fnt, macintosh_fnt_len );

    macintosh_font_p->read( loading );

    Data::Mission::Resource::ParseSettings parse_settings;
    parse_settings.type = Data::Mission::Resource::ParseSettings::Macintosh;
    parse_settings.endian = Utilities::Buffer::BIG;
    parse_settings.output_level = output_level;
    parse_settings.output_ref = stream;

    if( !macintosh_font_p->parse( parse_settings ) )
        throw std::logic_error( "Internal Error: The internal Mac font has failed to parse!");

    // DEL symbol required for internal fonts!
    if( macintosh_font_p->getGlyph( 0x7F ) == nullptr )
        throw std::logic_error( "Internal Error: The internal Mac font does not have the DEL key symbol!");

    return macintosh_font_p;
}

int checkImage( const Data::Mission::FontResource &font, size_t qoi_len,
               const uint8_t *const qoi_r, std::string name = "N/A" ) {
    int problem = 0;
    Utilities::ImageFormat::QuiteOkImage qoi_reader;
    
    Utilities::Image2D expected_image( 0, 0, Utilities::PixelFormatColor_W8() );
    
    Utilities::Buffer expected_buffer( qoi_r, qoi_len );
    
    if( qoi_reader.read( expected_buffer, expected_image ) <= 0 ) {
        std::cout << name <<  ": There is something wrong with QOI reading not this module itself!" << std::endl;
        problem = 1;
    }
    
    problem |= compareImage2D<Utilities::Image2D>( *font.getImage(), expected_image, name );
    
    return problem;
}

struct GlyphChecker {
    uint8_t glyphID;
    uint8_t width;
    uint8_t height;
    uint8_t left;
    uint8_t top;
    uint8_t x_advance;
    
    GlyphChecker() : glyphID( 0 ) {}
    GlyphChecker( uint8_t glyphID_param ) : glyphID( glyphID_param ) {}
    GlyphChecker( uint8_t glyphID_param, uint8_t width_param, uint8_t height_param, uint8_t left_param, uint8_t top_param, uint8_t x_advance_param ) : glyphID( glyphID_param ), width( width_param ), height( height_param ),left( left_param ), top( top_param ), x_advance( x_advance_param ) {}
    
    int check( const Data::Mission::FontGlyph &glyph, std::string name ) const {
        int problem = 0;
        
        if( glyph.getGlyph() != glyphID ) {
            std::cout << name << " has a hashing bug detected with " << (uint16_t)glyphID << "\n";
            std::cout << (uint16_t)glyph.getGlyph() << " is placed in " << glyphID << std::endl;
            
            problem = 1;
        }
        if( glyph.getWidth() != width || glyph.getHeight() != height )
        {
            std::cout << name << " has a dimensions problem with " << (uint16_t)glyphID << "\n";
            std::cout << "  width of " << (uint16_t)glyph.getWidth() << " is not " << (uint16_t)width << std::endl;
            std::cout << "  height of " << (uint16_t)glyph.getHeight() << " is not " << (uint16_t)height << std::endl;
            
            problem = 1;
            
        }
        if( glyph.getLeft() != left || glyph.getTop() != top )
        {
            std::cout << name << " has a placement problem with " <<  (uint16_t)glyphID << "\n";
            std::cout << "  left of " << (uint16_t)glyph.getLeft() << " is not " << (uint16_t)left << std::endl;
            std::cout << "  top of " << (uint16_t)glyph.getTop() << " is not " << (uint16_t)top << std::endl;
            
            problem = 1;
            
        }
        if( glyph.getXAdvance() != x_advance )
        {
            std::cout << name << " has a x advance problem with " << (uint16_t)glyphID << "\n";
            std::cout << " " << (uint16_t)glyph.getXAdvance() << " is not " << (uint16_t)x_advance << std::endl;
            
            problem = 1;
        }
        
        return problem;
    }
};

inline bool operator<( const GlyphChecker& A, const GlyphChecker& B ) {
    return A.glyphID < B.glyphID;
}

int main() {
    int problem = 0;
    
    {
        auto windows_font_r = Data::Mission::FontResource::getWindows( &std::cout, 3 );
        std::string name = "Windows";
        
        if( windows_font_r == nullptr ) {
            std::cout << name << " font does not exist!" << std::endl;
            return 1;
        }
        if( windows_font_r->getImage() == nullptr ) {
            std::cout << name << " font lacks image!" << std::endl;
            return 1;
        }
        
        problem |= checkImage( *windows_font_r, computer_qoi_len, computer_qoi, name );
        
        delete windows_font_r;
    }
    
    {
        auto mac_font_r = getMacintosh( &std::cout, 3 );
        std::string name = "Macintosh";
        
        if( mac_font_r == nullptr ) {
            std::cout << name << " font does not exist!" << std::endl;
            return 1;
        }
        if( mac_font_r->getImage() == nullptr ) {
            std::cout << name << " font lacks image!" << std::endl;
            return 1;
        }
        
        problem |= checkImage( *mac_font_r, computer_qoi_len, computer_qoi, name );
        
        delete mac_font_r;
    }
    
    {
        auto ps1_font_r = Data::Mission::FontResource::getPlaystation( &std::cout, 3 );
        std::string name = "Playstation";
        
        if( ps1_font_r == nullptr ) {
            std::cout << name << " font does not exist!" << std::endl;
            return 1;
        }
        if( ps1_font_r->getImage() == nullptr ) {
            std::cout << name << " font lacks image!" << std::endl;
            return 1;
        }
        
        problem |= checkImage( *ps1_font_r, playstation_qoi_len, playstation_qoi, name );
        
        std::set<GlyphChecker> expected_glyphs;
        
        const GlyphChecker glyph_default = { 0, 5, 5, 70, 7, 6};
        
        // -- Start of checking PS1 characters to test here.
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = ' ';
            glyph.left = 216;
            glyph.top = 7;
            
            expected_glyphs.insert( glyph );
        }
        
        for( uint8_t i = 'A'; i <= 'Z'; i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = i;
            glyph.left = 6 * (i - 'A');
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        for( uint8_t i = '0'; i <= '9'; i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = i;
            glyph.left = 156 + 6 * (i - '0');
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        for( uint8_t i = 'a'; i <= 'z'; i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = i;
            glyph.left = 6 * (i - 'a');
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = '!';
            glyph.left = 216;
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = '%';
            glyph.left = 234;
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = '&';
            glyph.left = 246;
            glyph.top = 1;
            
            expected_glyphs.insert( glyph );
        }
        
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = '&';
            glyph.left = 246;
            
            expected_glyphs.insert( glyph );
        }
        
        const uint8_t row_7[] = { '-', '_', '+', '=', '{', '}', '[', ']', ':', ';', '\'', '"', '<', '>', ',', '.', '?', '\\', '|', '/'};
        
        for( unsigned i = 0; i < sizeof(row_7) / sizeof(row_7[0]); i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = row_7[ i ];
            glyph.left = 6 * i;
            
            expected_glyphs.insert( glyph );
        }
        
        const uint8_t half_row_7[] = { '`', '(', ')', 0x7F };
        
        for( unsigned i = 0; i < sizeof(half_row_7) / sizeof(half_row_7[0]); i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = half_row_7[ i ];
            glyph.left = 126 + 6 * i;
            
            expected_glyphs.insert( glyph );
        }
        
        const uint8_t german_character_upper[] = { 0xC4, 0xD6, 0xDC };
        
        for( unsigned i = 0; i < sizeof(german_character_upper) / sizeof(german_character_upper[0]); i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = german_character_upper[ i ];
            glyph.left = 198 + 6 * i;
            
            expected_glyphs.insert( glyph );
            
            // Add the lower cases
            glyph.glyphID = german_character_upper[ i ] | 0x20;
            expected_glyphs.insert( glyph );
        }
        
        const uint8_t ps1_symbols[] = { 35, 126, 64, 42 };
        
        for( unsigned i = 0; i < sizeof(ps1_symbols) / sizeof(ps1_symbols[0]); i++ )
        {
            GlyphChecker glyph = glyph_default;
            
            glyph.glyphID = ps1_symbols[ i ];
            glyph.left = 174 + 6 * i;
            
            expected_glyphs.insert( glyph );
        }
        
        {
            GlyphChecker direction = glyph_default;
            
            direction.glyphID = 36;
            direction.width = 11;
            direction.left = 162;
            direction.x_advance = 12;
            expected_glyphs.insert( direction );
            
            direction.glyphID = 94;
            direction.left = 150;
        }
        
        uint16_t character_amount = 0;
        int character_problem = 0;
        
        for( uint16_t i = 0; i < 0x100; i++ ) {
            auto glyph_r = ps1_font_r->getGlyph( i );
            
            if( glyph_r != nullptr ) {
                character_amount++;
                
                if( character_problem == 0 ) {
                    auto accessor = expected_glyphs.find( i );
                    
                    if( accessor == expected_glyphs.end() ) {
                        character_problem = 1;
                        
                        std::cout << name << " has a glyph that is not in the test with " << i << std::endl;
                    }
                    else if( (*accessor).check( *glyph_r, name ) == 1 )
                    {
                        character_problem = 1;
                    }
                }
            }
        }
        
        if( character_amount != expected_glyphs.size() ) {
            problem = 1;
            
            std::cout << name << " the expected glyphs had expected " << expected_glyphs.size() << " while the acutal amount is " << character_amount << std::endl;
        }
        
        delete ps1_font_r;
    }
    
    return problem;
}

